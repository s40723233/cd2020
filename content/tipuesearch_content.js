var tipuesearch = {"pages": [{'title': 'Home', 'text': 'Week1~5 \n', 'tags': '', 'url': 'Home.html'}, {'title': 'Weeks', 'text': '', 'tags': '', 'url': 'Weeks.html'}, {'title': 'Week1~Week5', 'text': '1.建立GITHUB倉儲，名稱cad2020。 \n 2.打開隨身系統，下載cad2020資料夾，輸入git clone\xa0 https://github.com/s40723233/cad2020 \n 3.輸入cd cad2020 進入資料夾輸入git submodule add \xa0 https://github.com/mdecourse/cmsimde.git \n 4.到資料夾裡把cmsimde裡面的up_dir裡的資料全部複製到cad2020裡面。 \n 5. 之後 再進入cmsimde，輸入python -m pip install ask_cors。 \n 6.完成後輸入python wsgi.py 就可以編輯倉儲了 \n \n Updated Python 下載3.8.2版本的安裝檔。 \n 開啟，點選定制安裝.. \n 將選項的pip取消勾選 \n 將路徑改為任意槽的py382資料夾 \n 用編輯器開啟start_mdecourse.bat檔案。 \n 將檔案中的py373全部都改成py382 \n \n 安裝Flask、lxml、 Markdown 、bs4、 pelican 、ask_cors、leo。 \n start.bat: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n \n \n \n @echo \xa0 off \n set \xa0 Disk = y \n subst \xa0 % Disk % : \xa0 "data" \n \xa0 \xa0 \n % Disk % : \n \xa0 \xa0 \n set \xa0 HomePath = % Disk % :\\home \n set \xa0 HomeDrive = % Disk % :\\home \n set \xa0 Home = % Disk % :\\home \n set \xa0 USERPROFILE = % Disk % :\\home \n \xa0 \xa0 \n REM 將系統 Python 程式的 io 設為 utf - 8 \n set \xa0 PYTHONIOENCODING = "utf-8" \n \xa0 \xa0 \n #REM for putty \n #Set GIT_HOME=%CDisk%:\\portablegit\\bin\\ \n #Set GIT_SSH=%Disk%:\\putty\\plink.exe \n \xa0 \xa0 \n set \xa0 PYTHONPATH = % Disk % :\\py382\\DLLs; % Disk % :\\py382\\Lib; % Disk % :\\py382\\Lib\\site - packages; \n set \xa0 PYTHONHOME = % Disk % :\\py382 \n \xa0 \xa0 \n set \xa0 path_python = % Disk % :\\py382; % Disk % :\\py382\\Scripts; \n set \xa0 path_msys2 = % Disk % :\\msys64\\mingw64\\ bin ; \n set \xa0 path_git = % Disk % :\\portablegit\\ bin ; \n set \xa0 path_tcc = % Disk % :\\tcc; \n \xa0 \xa0 \n path = % Disk % :; % path_python % ; % path_msys2 % ; % path_git % ; % path_tcc % ; \n \xa0 \xa0 \n start \xa0 / MIN \xa0 cmd.exe \n start \xa0 / MIN \xa0 cmd.exe \n start \xa0 / MIN \xa0 cmd.exe \n start \xa0 / MIN \xa0 cmd.exe \n \xa0 \xa0 \n start \xa0 / MIN \xa0 % Disk % :\\wscite432\\wscite\\SciTE.exe \n start \xa0 / MIN \xa0 % Disk % :\\wscite432\\wscite\\SciTE.exe \n \xa0 \xa0 \n Exit \n \n \n \n \n \n \n \n stop.bat: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n \n \n \n @echo \xa0 off \n set \xa0 Disk = y \n path = % PATH % ; \n \xa0 \xa0 \n taskkill \xa0 / IM python.exe \xa0 / F \n taskkill \xa0 / IM pythonw.exe \xa0 / F \n taskkill \xa0 / IM scite.exe \xa0 / F \n \xa0 \xa0 \n REM 終止虛擬硬碟與目錄的對應 \n subst \xa0 % Disk % : \xa0 / D \n REM 關閉 cmd 指令視窗 \n taskkill \xa0 / IM cmd.exe \xa0 / F \n \xa0 \xa0 \n EXIT \n \n \n \n \n \n \n \n \n 第三組第一次小組會議: \n 開會紀錄PDF: https://drive.google.com/openid=1R3UElFfUhid4D7hocedXO69w5lPEYi1M \n 會議內容:討論工作內容 \n 作業1: \n 1.請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ 2.描述如何為Windows 10 64位系統準備一個可移植的Python編程系統，以允許在Github上維護CMSiMDE網站，Pelican博客和js演示文稿？ 3.您需要從 http://www.coppeliarobotics.com/helpFiles/index.html 了解什麼來實現四輪機器人？ \n 工作分配圖 \n \n \n \n Week3 \n 翻譯 http://www.coppeliarobotics.com/helpFiles/index.htm 部分內容 \n 下載PDF連結: \n https://drive.google.com/open?id=1QQAyqm9VjunnozFMYdrV4K7ktpkjgVOu \n \n \n', 'tags': '', 'url': 'Week1~Week5.html'}, {'title': 'Week6~Week9', 'text': 'Week6 \n 第三組第二 次直播會議 \n 開會紀錄PDF連結: https://drive.google.com/open?id=1afrCAJJtArv94qnTK2zOsPor7WmpeaPH \n \n 作業二: \n \n 根據主題 0 和主題 1 的素材，您能否具體描述機械設計團隊為了完成作業 1 的四輪機器人需要做些什麼 ? \n 您需要從 https://cyberbotics.com/doc/guide/index 了解什麼來實現四輪機器人？ \n \n \n 工作分配表: \n \n \n', 'tags': '', 'url': 'Week6~Week9.html'}, {'title': 'Week10~Week14', 'text': '第三次直播會議. \n 開會紀錄PDF連結: https://drive.google.com/open?id=1AP49O_JYqgqQNDzEz7Pxj-tzjugL8Bb2 \n \n 作業三 : 根據對 Topic2 和 Topic3 的閱讀，使用 CoppeliaSim 、 Webots 、 Onshap e 提出一個機電一體化項目。 \n 工作分配表: \n \n \n git clone cd2020pj1 倉儲 。 進入 Google API 。 建立專案。 啟用API和Google+ Domains API。 將ID及密碼複製，命名為oauth_s學號.txt 並存儲 接著設定來源及URL，點選新增URL \n https://localhost:8443及授權的重新定向URL輸入https://localhost:8443/login/google/，接著存儲。 開啟leo \n 打開cd2020pj1.leo。 接著輸入pip install authomatic。 進入pj1，打開wsgi.py，即完成。 \n Week 11 \n 1.下載vitualbox並下載老師設定好的 Ubuntu \n 2.開啟vitualbox並匯入老師的Ubuntu \n 3.啟動Ubuntu \n 4.密碼kmol2020，點選LXTermial \n 5.進入互動視窗後輸入xterm&，再用ls顯示資料 \n 6.cd coppeliasim4_rev4 >cd CoppeliaSim_Edu_V4_0_0_Ubuntu18_04進入我們要的資料夾 \n 7. ./coppeliaSim.sh開啟v-rep這樣就能在虛擬主機開啟v- rep \n \n \n', 'tags': '', 'url': 'Week10~Week14.html'}, {'title': 'Week15~Week19', 'text': 'Week 15 \n 1.下載filezilla安裝 \n https://portableapps.com/apps/internet/filezilla_portable \n 2.設定putty \n 3.開啟 putty\xa0 帳密是kmol2020 \n 4.開filezilla \n 5.檔案->站台管理員->新建一個站台 \n 6.設定改成ssh \n 7.完成 \n', 'tags': '', 'url': 'Week15~Week19.html'}, {'title': 'Assignment', 'text': '', 'tags': '', 'url': 'Assignment.html'}, {'title': 'Assignment 1', 'text': '\xa0\xa0 當今的數位產品比以前都來的複雜。而創建他們需要多個團隊成員，每個團隊成員都有自己的一套技能和專業知識。例如，在 Savvy ，我們的客戶與以下人員緊密合同：產品經理， UX 設計師，視覺設計師，開發人員，內容策略師和成長專家。 \xa0 \n \xa0\xa0\xa0 \xa0 我們使用設計協同來處理這種複雜的事物。如果設計得當，設計協同將使每位專家都擁有思維方式，製同過程和工具，從而團結起來，更快地構建更好的產品。我們編寫了此資源，以幫助其他應用程式創建者採用協同文化和流程。繼續閱讀以了解為什麼設計協同對於創建引人注目的產品和體驗很重要。我們還將深入探討設計協同思想和文化的要素，有效設計協同的工具，以及工同中設計協同的真實示例。 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0 甚麼是 ” 設計協同 ”? \n \xa0\xa0\xa0 \xa0 在進入之前，我們需要在同一頁面上了解什麼是設計協同 …… 而什麼不是。簡單來說，設計協同就是在設計優先的環境中進行協同。但是，由於設計的本質，尤其是我們在 Savvy 所做的設計，設計協同往往會超出人們通常認為的協同範圍。通常將協同定義為兩個或兩個以上的人在共同的目標上共同努力，而設計協同則涉及更多。 \xa0 設計協同包括更多具有不同技能，更艱鉅挑戰和更大目標，影響深遠的人。 \xa0 您可能將協同視為兩個人掛在一塊藝術品上。它只需要溝通，團隊合同和四隻手。設計協同是指一組策展人精心設計訪問者的體驗。他們選擇藝術品，選擇在何處以及如何懸掛藝術品，它所居住的房間（以及房間的照明，家具），甚至是先前的房間以及整個建築物。 \xa0 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0 為什麼設計協同很重要 \xa0 \n \xa0\xa0\xa0 \xa0 您可以在沒有協同的情況下設計產品，但是需要一個協同設計過程才能使該產品出色。這就是設計協同如此重要的原因。 \xa0 \n \xa0\xa0\xa0 \xa0 我們不僅為客戶構建應用程序。 \xa0 Savvy 建立了多平台的體驗，複雜的內部系統，在某些情況下還建立了整個品牌和業務。為此，我們利用跨多個核心學科的專業知識：戰略，設計，開發和增長。每個項目涉及很多人，每個人都有自己的技能和專長。 \xa0 \n \xa0\xa0\xa0 \xa0 設計協同將這些思想融合在一起，結合他們各自的專業知識，共同創建解決方案，以解決共同目標的各個方面。設計協同不是從一個角度來解決問題，而是將這個問題擺在所有專家面前，迫使他們考慮新的觀點和可能性。 \xa0 \n 例如，我們在設計過程的早期就讓我們的開發人員參與進來，以確保我們盡快解決技術機會和局限性。這使我們可以使用養設計協作心態大有幫助 \xa0 \n 在設計過程中建立有效協作的過程中，正確的思維方式。它為誰進行協作，如何合作以及達到何種目的奠定了指導原則。 \xa0 \n \xa0\xa0\xa0 \xa0 \xa0\xa0\xa0合作\xa0 \n \xa0\xa0 \xa0 適合所有人設計師有時會認為不是設計師的人沒有資格提供良好的反饋。但是出色的設計不只是視覺效果。它涵蓋了產品的所有內容，從品牌到工程，再到發展。 \xa0 \n \xa0\xa0\xa0 \xa0 設計協作吸引了許多人，每個人都有自己的觀點和優勢。它給每個人一個聲音。這些新鮮的觀點為設計師提供了更多信息。前景使設計師能夠對可能對其他設計，開發和營銷選擇產生持久影響的選擇做出正確的決定。 \xa0 \n \xa0\xa0\xa0 \xa0 與客戶的協作與與其他設計師和團隊成員的協作一樣重要。在 Savvy ，我們讓客戶參與其產品的整個創作過程。我們花時間解釋各種選擇，並與客戶進行討論以確保我們了解他們的想法。 \xa0 \n \xa0\xa0\xa0 \xa0 這使我們能夠及早獲得客戶的認可，並從明確的起點和終點開始工作。更大的曝光量並不是什麼大驚喜，而且沒人會第一次看到他們的作品。 \xa0 \n 客戶協作意味著可以更快地獲得更清晰的產品，而無需付出高昂的代價和不必要的會議。 \xa0 \n \xa0\xa0\xa0 \xa0 很容易陷入角色而忽略全局。通過儘早讓更多人參與進來，您可以與隊友建立更緊密的聯繫，並培養對產品成功的共同責任和興趣。您正在創建一個更加開放和透明的流程，以及一個更緊密聯繫和投入的團隊。 \xa0 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0 合作是相對的， \xa0 \n \xa0\xa0\xa0 \xa0 客戶面對我們時面臨著複雜的挑戰和目標。更不用說，我們將繼續與客戶合作數月甚至數年，並在過去的決策，研究和其他有價值的背景下積累大量的知識。 \xa0 通過採用上下文優先的方法，可以確保每個人都具有最高的知識水平。這樣，他們就可以在產品上做出最明智的決定。為了做到這一點，我們通過儘早召集所有團隊成員，記錄和記錄會議，建立一些重疊以及在此過程中像對待客戶一樣對待下一個團隊成員，使 Savvy 的每個人都獲得有關最新信息的最新信息。 \xa0 \n 在個案協作的基礎上，上下文也同樣重要。請遵循以下準則以保持協作中的上下文優先： \xa0 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0 \xa0 在顯示您的工作之前提供上下文。在提供背景信息的情況下，如果您的作品出現在屏幕上，那麼您可能會失去聽眾的注意力。 \xa0 \n 描述您要解決的問題或要達到的目標。 \n 介紹與當前問題相關的工作。說明您的想法以及做出某些決定的原因。 \xa0 \n 請具體說明您要反饋的內容。 \xa0 \n 合作是開放，誠實和無畏的 \xa0 \n 將工作（和您自己）放在外面並不容易。情緒會阻礙您提供坦誠的反饋，尤其是當您擔心會傷害對方的感覺時。 \xa0 \n 這並不意味著在協作中沒有情感的位置。在設計中，讓您感覺如何很重要。我們為人們 ... 思考並為他們創建解決方案 ... 有情感並在決策中使用情感的人。在對話中留下情感可能會縮短潛在的想法或解決方案。充其量，僅就事實和數據進行務實的討論將無法提供全面的信息。在最壞的情況下，它可能是鯡魚或提供虛假的敘述。 \xa0 \n 在 Savvy ，我們使我們的團隊對收到反饋 “ 無所畏懼 ” 。這意味著放開對我們所創造的東西進行判斷的任何焦慮。這也意味著了解我們在一起更加強大，更有機會創造偉大的事物。在無所畏懼的情況下，我們會更好地相互信任和相互賦予能力，以提供誠實和周到的反饋。 \xa0 \n 我們的團隊還相信，不要害怕提供反饋。這意味著要了解需要解決的問題以及客戶的品牌和目標。這也意味著問很多問題，以發現相關的思想或幫助指導決策。 \xa0 \n 嘗試以探索性和指導性的方式提出反饋意見，目的是建立和改進工作，而不是拆散工作。到 Twitter\xa0 \n 您的反饋應該是建設性的。與其說您不喜歡某些東西，不如說出您的反饋意見以指出您要幫助解決的問題。提供可行的步驟來改進工作，或者至少提供您思考背後的理由。並且不要忘了表達您喜歡什麼以及為什麼。 \xa0 \n 協作不僅僅是新的想法 \xa0 \n 開放和接受協作反饋是一回事，解析這些想法並將其用作激發自己的想法是另一回事。隨著時間的推移，這是一項更高級的技能。一種實踐方法是成為更好的聽眾。 \xa0 \n 通常，在與他人交談時，我們會更多地考慮接下來要說的內容，而不是別人在說什麼。這會影響反饋過程，尤其是在設計過程中，因為在聽到其他意見或解決方案之前，我們通常會知道我們要說的話。 \xa0 \n 當您選擇先聆聽然後再做出反應時，它可以使您完全理解其他人的反饋，並讓您更深入地了解他們所使用的觀點以及他們來自何處？很有可能這是您在創建過程中未曾考慮過的觀點。通過聽取並理解所收到反饋背後的上下文和推理，您可以以更多的方式來審視，思考和體驗設計。然後，您可以針對要設計的挑戰，目標和用例來測試這些新觀點，以查看它們是否更適合用戶。 \xa0 \n 當所有協作者都在積極聆聽時，更容易接受反饋。最終，提供良好反饋的技能來自學習如何獲得反饋。當我們努力成為更好的聽眾時，我們也發現自己變得越來越謙虛，去成為我們認為的， \xa0 更好的設計師。 \xa0 \n 查找和使用正確的設計協作工具 \xa0 \n 正確的工具在增強團隊的設計協作思想方面大有幫助。在本節中，您將學習在協作工具中尋找什麼。我們還根據自己的經驗推薦工具。 \xa0 \n 選擇正確的工具 \xa0 \n 有效的協作工具消除了合作者快速便捷地訪問工作並與之交互的所有障礙。這將重點放在提供反饋上。它們還允許其他人在不破壞原始設計的情況下進行協作。 \xa0 \n 過去，我們使用依賴於提供基本版本控製而不是真正的協作功能的工具。例如，設計人員將保存一個 Sketch 文件並將其上傳到 Dropbox 。然後，另一個團隊成員將下載它，進行處理，然後重新上傳。當文件在另一個人手中時，沒有簡單的方法進行更改。我們使用 Github 嘗試了類似的方法，該工具被證明非常適合管理代碼庫，但對於迭代設計工作卻沒有太多幫助。不用說，這些版本控製過程使我們的協作更加耗時，混亂並且非常不協作。 \xa0 \n 現在，我們根據要實現的協作類型從各種更高級的工具中進行選擇。 \n FIGMA\xa0 \n 這是一個協作優先的共享工作區工具。 \xa0 Figma 非常適合在設計文件的同一區域中包含多個人。您可以實時觀看隊友的設計或在同一個設計上一起工作。 \xa0 \n 好處： \xa0 \n Figma 降低了某人在筒倉中工作的能力。 \xa0 \n 無需添加不必要的修飾或創建靜態可交付結果即可實現協作。因此，您無需更改工作流程即可展示設計。 \xa0 \n 可以輕鬆地在其本機環境中查看並與之交互，並隨意進行調整。 \xa0 \n 使用時間：流程文檔，高保真線框，即時協作，以及引導客戶瀏覽一系列屏幕，以解釋並獲取有關設計方向的反饋。 \xa0 \n MARVEL\xa0 \n 雖然 FIGMA 容易感到更自由的形式和靈活，奇蹟允許合作的一個更加規範的形式。這也使我們的客戶可以輕鬆地與我們合作。 \xa0 \n 好處： \xa0 \n Marvel 是一個更清潔，更規範和專注的空間，非常適合與非設計團隊成員進行協作。 \xa0 \n 它消除了客戶為帳戶付款或對工具進行深入了解的所有需求。 \xa0 \n 客戶可以下載屏幕，並通過 Marvel 應用程序在設備環境中查看它們的運行情況。 \xa0 \n 使用時間：與客戶和開發人員一起呈現更多最終設計工作。 （了解 Marvel 與其他原型工具的比較。） \xa0 \n 其他協作工具 \xa0 \n Zeplin 是有用的傳遞工具，使開發人員可以深入研究設計工作的細節。 （我們在這裡更深入地討論 Zeplin 。） \xa0 \n Quip 是一個集思廣益和產品 / 過程文檔的絕佳平台。我們使用它來記錄和組織團隊成員在項目上需要了解的所有上下文和知識。對於集思廣益而不是視覺關注的新想法也很有用。 \xa0 \n 請注意，還有許多其他工具可以為協作增加與上面列出的類似的好處。此列表代表了在我們日常合作中對我們有效的工具，但並不表示所有可能對您的團隊有效的選項。 \xa0 \n Savvy 的設計協作過程在實踐中 \xa0 \n 現在，讓我們採用上面概述的最佳實踐和工具，並展示它們如何在現實生活中融合在一起。我們將使用 Press Play 應用程序中的實時繪圖經驗來演示設計協作的重要性。這種經驗涉及多個學科領域的團隊成員之間的重大協作，其中包括視覺設計師， UX 設計人員，開發人員，產品經理，當然還有客戶。 \xa0 \n 上下文和挑戰 \xa0 \n Press Play 是包含每日，每周和每月圖紙的抽獎應用程序。用戶通過觀看廣告賺取門票，並通過選擇五個表情符號輸入圖紙。然後，根據獲獎者的選擇與繪畫中隨機選擇的表情符號匹配的方式來獎勵獲獎者。這項特殊任務使我們為等待現場繪畫結果的用戶創造了一種有趣而激動人心的現場體驗。 \xa0 \n 對於我們來說，為這種體驗創建類似遊戲的動畫非常重要。我們特別想在屏幕上喚起用戶的嬉戲感和期待感，讓用戶看到他們選擇的表情符號與抽獎活動圖上的表情符號相匹配。 \xa0 \n 就是說，我們需要注意動畫所需的複雜程度及其對整體產品時間表和成本的影響。我們的目標是在合理的時間內提高保真度，而又不顯著影響項目預算。 \xa0 \n 協作過程 \xa0 \n 階段 1 ：線框和頭腦風暴 \xa0 \n 首先，精明的 UX 設計師創建了 Press Play 的整體 UX 和線框，確定需要哪些屏幕以及每個屏幕的時間安排。她還為實時繪畫動畫整理了一個粗略的概念（如右圖所示），根據客戶的需求和項目已建立的用戶體驗表達了初步的想法。 \xa0 \n 她向產品經理和視覺設計師展示了線框和粗糙的動畫。然後，這三個人都與客戶會面，因此每個人都可以直接聽到反饋。 \n 第 2 階段：研究和環境 \n 精明的視覺設計師負責創建實際的實時繪圖動畫，而他們的眼睛新鮮，並且對 Press Play 產品沒有太多的了解。為了加快速度，他與 UX 設計師和產品經理進行了深入交流。他還花費額外的研究時間來了解總體產品目標，挑戰並熟悉迄今為止的工作。如前所述，他是線框演示的一部分，並向客戶提出反饋。 \xa0 \n 在這種情況下，他進行了一些與手頭任務直接相關的其他研究。通過這樣做，他確保自己了解現場繪畫體驗的要求，目標和挑戰。他查看了具有類似體驗和保真度的其他應用，並參考了粗糙的動畫以了解最終動畫到底需要顯示什麼（在這種情況下，是獲勝的表情符號和用戶的表情符號選擇）。在過於依賴解決方案之前，他會見了一位精明的 iOS 開發人員，以了解技術限制和注意事項。 \xa0 \n 然後，我們的視覺設計師和 UX 設計師集思廣益，對視覺效果至關重要。他們一致認為，需要為用戶增加懸念 / 期望，這需要緩慢的揭示。 \xa0 \n 階段 3 ：迭代和反饋 \xa0 \n 當我們的視覺設計師通過多個不同的方向工作時，他邀請 UX 設計師來討論他在 Figma 中的進度和設計。 。通過討論工作，他們激發了更多的想法和迭代，同時確保它們符合客戶的期望。有了更多可靠的選擇，他再次與 iOS 開發人員會面，以確保從技術角度來看一切都符合要求。 \xa0 \n 階段 4 ：客戶反饋和開發 \xa0 \n 當我們獲得多個最終版本的體驗時，視覺設計師使用 Figma 與客戶一起進行了體驗。 \xa0 Press Play 的產品經理和 UX 設計師也提供了反饋和指導。 \xa0 \n 一旦他們都了解了引起客戶興趣的東西，視覺設計師便著手使視覺效果最大化，並為開發做好準備。他繼續與 iOS 開發人員合作，以在技術層面上充分利用該概念。 \xa0 \n 最終結果 \xa0 \n Press Play 的實時繪圖動畫是工作中設計協作的一個例子。一支跨學科專家團隊，共同解決具有更大影響的設計和開發挑戰。沒有設計協作，我們將找不到用戶體驗，視覺和技術之間的理想交匯處。 \xa0 \n 當客戶在他的應用程序中看到動畫生動時，他稱其為 “ 開創性的 ” 。 \xa0 \n 此外，這種 Press Play 體驗的研究，協作和創造幫助我們發現了產品用戶旅程中的空白。最初，實時繪圖的目的是將結果顯示給用戶的一種有趣的方式。在我們進行設計過程的過程中，我們意識到，如果用戶沒有觀看實時圖形而迷路了，他們就無法體驗到該圖形的用戶旅程。 \xa0 \n 基於這一發現，我們決定在其他兩個地方也改進該應用程序。我們在 “ 獲勝者圈子 ” 中添加了一個 “ 結果 / 實時繪圖 ” 元素，並在該應用程序的 “ 用戶詳細信息 ” 端添加了 “ 失敗記錄 ” 部分。最後，設計協作使我們能夠實現用戶體驗中這一未滿足的需求。 \xa0 \n 結論說明 \xa0 \n 需要進行設計合作，以解決構建出色產品和體驗所伴隨的複雜，關鍵問題。通過利用跨學科的多個團隊成員的專業知識，設計協作可確保團隊從各個角度應對挑戰並尋求更好的解決方案。通過正確的思維方式，工具和流程，設計協作使團隊能夠通過創造性思維和迭代來更深入。 \xa0 \n 我們希望本指南為您提供一個良好的基礎，您可以以此為基礎建立自己的有效設計協作流程。您可以在 Savvy 博客上了解有關設計和產品策略的更多信息，也可以隨時在 Savvy Apps 網站上與我們聯繫以獲取幫助。', 'tags': '', 'url': 'Assignment 1.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Develop.html'}]};