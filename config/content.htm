<h1>Home</h1>
<p>Week1~5</p>
<h1>Weeks</h1>
<h2>Week1~Week5</h2>
<p>1.建立GITHUB倉儲，名稱cad2020。</p>
<p>2.打開隨身系統，下載cad2020資料夾，輸入git clone <a href="https://github.com/s40723233/cad2020">https://github.com/s40723233/cad2020</a></p>
<p>3.輸入cd cad2020 進入資料夾輸入git submodule add<span> </span><a href="https://github.com/mdecourse/cmsimde.git">https://github.com/mdecourse/cmsimde.git</a></p>
<p>4.到資料夾裡把cmsimde裡面的up_dir裡的資料全部複製到cad2020裡面。</p>
<p>5.<span>之後</span>再進入cmsimde，輸入python -m pip install ask_cors。</p>
<p>6.完成後輸入python wsgi.py 就可以編輯倉儲了</p>
<p></p>
<p>Updated Python 下載3.8.2版本的安裝檔。</p>
<p>開啟，點選定制安裝</p>
<p>將選項的pip取消勾選</p>
<p>將路徑改為任意槽的py382資料夾</p>
<p>用編輯器開啟start_mdecourse.bat檔案。</p>
<p>將檔案中的py373全部都改成py382</p>
<p></p>
<p>安裝Flask、lxml、<span>Markdown</span>、bs4、<span>pelican</span>、ask_cors、leo。</p>
<p></p>
<p><span><strong>第三組第一次小組會議:</strong></span></p>
<p><span><strong>會議內容:討論工作內容</strong></span></p>
<p><span>作業1:</span></p>
<p><span>1.請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？</span><br/><br/><span>2.描述如何為Windows 10 64位系統準備一個可移植的Python編程系統，以允許在Github上維護CMSiMDE網站，Pelican博客和js演示文稿？</span><br/><br/><span>3.您需要從</span><a href="http://www.coppeliarobotics.com/helpFiles/index.html">http://www.coppeliarobotics.com/helpFiles/index.html</a><span>了解什麼來實現四輪機器人？</span></p>
<p><span>工作分配圖</span></p>
<p><span><img alt="" height="616" src="https://s40723209.github.io/cd2020/images/%E5%B7%A5%E4%BD%9C%E5%88%86%E9%85%8D%E8%A1%A8.png" width="500"/></span></p>
<p><span></span></p>
<h2>Week6~Week10</h2>
<h2>Week11~Week15</h2>
<h2>Week16~Week20</h2>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>